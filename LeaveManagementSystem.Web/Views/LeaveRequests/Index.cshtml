@model IEnumerable<LeaveRequestReadOnlyVM>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Leave Requests List";
}

    <h2>Leave Application</h2>
    <br />
<div class="d-flex gap-2">
    <!-- Request Leave Button -->
    <a asp-action="Create" class="btn btn-outline-primary btn-sm d-flex align-items-center gap-1">
        <i class="bi bi-plus-circle-fill"></i> Request Leave
    </a>

    <!-- Back Button -->
    <a asp-controller="LeaveAllocation"
       asp-action="Details"
       asp-route-id="@TempData["AllocationId"]"
       class="btn btn-outline-secondary btn-sm d-flex align-items-center gap-1">
        <i class="bi bi-arrow-left-circle-fill"></i> Back
    </a>
</div>

    <table class="table table-light table-hover nowrap">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveTypeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NumberOfDays)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StartDate)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EndDate)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequestStatus)

                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var className = string.Empty;
                @if (item.LeaveRequestStatus == LeaveRequestStatusEnum.Approved)
                {
                    className = "success";
                }
                else if (item.LeaveRequestStatus == LeaveRequestStatusEnum.Rejected)
                {
                    className = "danger";
                }
                else if (item.LeaveRequestStatus == LeaveRequestStatusEnum.Pending)
                {
                    className = "warning";
                }
                else if (item.LeaveRequestStatus == LeaveRequestStatusEnum.Cancelled)
                {
                    className = "dark";
                }
                <tr>
                    <td class="text-start">
                        <i class="bi bi-briefcase me-2 text-secondary"></i>
                        @Html.DisplayFor(modelItem => item.LeaveTypeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumberOfDays)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                    <td>
                        <span class="badge bg-@className">@item.LeaveRequestStatus.ToString()</span>
                    </td>
                    <td>
                        <div class="btn-group" role="group">
                            @if (item.LeaveRequestStatus == LeaveRequestStatusEnum.Pending)
                            {
                                <button type="submit" data-id="@item.Id" class="btn btn-sm btn-danger cancelBtn d-flex align-items-center gap-2">
                                    <i class="bi bi-x-circle"></i>
                                    Cancel
                                </button>
                            }

                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <form id="cancelForm" asp-action="Cancel">
        <input type="hidden" name="id" id="leaveRequestId" />
        @Html.AntiForgeryToken()
    </form>

    @section Scripts {

        <script>
            $(function () {
                $('.cancelBtn').on('click', function (e) {
                    e.preventDefault();

                    const btn = $(this);
                    const id = btn.data('id');
                    btn.blur(); // Remove focus before SweetAlert takes over

                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, cancel it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $('#leaveRequestId').val(id);
                            $('#cancelForm').submit();
                        }
                    });
                });
            });
        </script>
    }
